
down vote

It's a little hacky, but I am passing variables to an ng-include with an ng-repeat of an array containing a JSON object :

<div ng-repeat="pass in [{'text':'hello'}]" ng-include="'includepage.html'"></div>

In your include page you can access your variable like this:

<p>{{pass.text}}</p>



========== PAGINATION ==========

var todos = angular.module('todos', ['ui.bootstrap']);

todos.controller('TodoController', function($scope) {
  $scope.filteredTodos = [];
  $scope.itemsPerPage = 30;
  $scope.currentPage = 4;

  $scope.makeTodos = function() {
    $scope.todos = [];
    for (i=1;i<=1000;i++) {
      $scope.todos.push({ text:'todo '+i, done:false});
    }
  };

  $scope.figureOutTodosToDisplay = function() {
    var begin = (($scope.currentPage - 1) * $scope.itemsPerPage);
    var end = begin + $scope.itemsPerPage;
    $scope.filteredTodos = $scope.todos.slice(begin, end);
  };

  $scope.makeTodos();
  $scope.figureOutTodosToDisplay();

  $scope.pageChanged = function() {
    $scope.figureOutTodosToDisplay();
  };

});

Bootstrap UI component

 <pagination boundary-links="true"
    max-size="3"
    items-per-page="itemsPerPage"
    total-items="todos.length"
    ng-model="currentPage"
    ng-change="pageChanged()"></pagination>
